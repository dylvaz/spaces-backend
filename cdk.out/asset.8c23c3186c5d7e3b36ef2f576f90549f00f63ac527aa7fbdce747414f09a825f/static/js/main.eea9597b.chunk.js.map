{"version":3,"sources":["services/config.ts","services/AuthService.ts","pages/Home/Home.tsx","pages/Login/Login.tsx","components/NavBar/NavBar.tsx","pages/Profile/Profile.tsx","components/ConfirmModal/ConfirmModal.tsx","assets/defaultSpacePhoto.jpg","components/SpaceComponent/SpaceComponent.tsx","pages/Spaces/Spaces.tsx","components/CreateSpace/CreateSpace.tsx","services/DataService.ts","components/App/App.tsx","index.tsx"],"names":["spacesApi","config","REGION","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","SPACES_PHOTOS_BUCKET","api","baseUrl","spacesUrl","Amplify","configure","Auth","mandatorySignIn","region","userPoolId","userPoolWebClientId","identityPoolId","authenticationFlowType","AuthService","username","password","signIn","user","cognitoUser","getUsername","undefined","result","userAttributes","attributes","push","Promise","resolve","reject","AWS","credentials","refresh","err","cognitoIdentityPool","IdentityPoolId","Logins","getSignInUserSession","getIdToken","getJwtToken","this","refreshCredentials","Home","Login","loginMessage","authService","callbackSetUser","history","useHistory","useState","loginAttempted","loginSuccessfull","values","setValues","onChange","e","target","name","value","onSubmit","a","preventDefault","login","alert","type","NavBar","loginLogout","className","to","Profile","profileUi","setUserAttributes","useEffect","getUserAttributes","userAtrs","fetchData","rows","userAttribute","Name","Value","renderUserAttributes","ConfirmModal","close","content","show","onClick","SpaceComponent","spaceId","location","photoUrl","reserveSpace","src","alt","defaultSpacePhoto","Spaces","dataService","spaces","setSpaces","showModal","setShowModal","modalContent","setModalContent","getSpaces","fetchedSpaces","reservationResult","map","space","key","CreateSpace","photoSpace","description","files","photo","createSpace","id","localPhotoUrl","URL","createObjectURL","data-test","update","localConfig","DataService","requestUrl","fetch","method","response","json","responseJSON","newSpace","uploadPublicFile","requestOptions","body","JSON","stringify","resultJSON","fileName","date","Date","now","randomString","Math","random","toString","substring","cleanFileName","toLowerCase","replace","file","bucket","formatFileName","S3","upload","Bucket","Key","Body","ACL","promise","uploadResult","Location","App","setUser","getAWSTempCreds","exact","path","component","render","document","getElementById"],"mappings":"iaAAaA,EACX,+DAEWC,EAAS,CACpBC,OAAQ,YACRC,aAAc,sBACdC,cAAe,6BACfC,iBAAkB,iDAClBC,qBAAsB,6BACtBC,IAAK,CACHC,QAASR,EACTS,UAAU,GAAD,OAAKT,EAAL,YCHbU,UAAQC,UAAU,CAChBC,KAAM,CACJC,iBAAiB,EACjBC,OAAQb,EAAOC,OACfa,WAAYd,EAAOE,aACnBa,oBAAqBf,EAAOG,cAC5Ba,eAAgBhB,EAAOI,iBACvBa,uBAAwB,wB,IA2DbC,E,4HAtDb,WACEC,EACAC,GAFF,gGAKwBT,IAAKU,OAAOF,EAAUC,GAL9C,cAKUE,EALV,yBAMW,CACLC,YAAaD,EACbH,SAAUG,EAAKE,gBARrB,8DAWWC,GAXX,yD,+HAeA,WAA+BH,GAA/B,gFACQI,EAA0B,GADlC,SAE2Bf,IAAKgB,eAAeL,EAAKC,aAFpD,cAEQK,EAFR,OAGEF,EAAOG,KAAP,MAAAH,EAAM,YAASE,IAHjB,kBAISF,GAJT,2C,uFAOA,WACE,OAAO,IAAII,SAAQ,SAACC,EAASC,GAC1BC,SAAWC,YAA4BC,SAAQ,SAACC,GAC3CA,EACFJ,EAAOI,GAEPL,Y,oEAMR,WAA6BT,GAA7B,8EACQe,EADR,sBAC6CrC,EAAOC,OADpD,0BAC4ED,EAAOE,cACjF+B,SAAWC,YAAc,IAAID,6BAC3B,CACEK,eAAgBtC,EAAOI,iBACvBmC,OAAO,eACJF,EAAsBf,EACpBkB,uBACAC,aACAC,gBAGP,CACE7B,OAAQb,EAAOC,SAbrB,SAgBQ0C,KAAKC,qBAhBb,gD,qEC5CaC,EARQ,WACrB,OACE,8BACE,8D,QC6ESC,EAhEqB,SAAC,GAAsC,IA6BrEC,EA7BiCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,gBAC9CC,EAAUC,cAD0D,EAG5CC,mBAAsB,CAChDjC,SAAU,GACVC,SAAU,GACViC,gBAAgB,EAChBC,kBAAkB,IAPoD,mBAGjEC,EAHiE,KAGzDC,EAHyD,KAUlEC,EAAW,SAACC,GAChBF,EAAU,2BAAKD,GAAN,kBAAeG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAG7CC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,6DACfL,EAAEM,iBADa,SAGMhB,EAAYiB,MAAMV,EAAOpC,SAAUoC,EAAOnC,UAHhD,QAGTM,EAHS,SAMb8B,EAAU,2BAAKD,GAAN,IAAcF,gBAAgB,EAAMC,kBAAkB,KAC/DL,EAAgBvB,GAChBwB,EAAQrB,KAAK,cAEb2B,EAAU,2BAAKD,GAAN,IAAcF,gBAAgB,EAAMC,kBAAkB,KAC/DY,MAAM,2BAXO,2CAAH,sDAyBd,OARIX,EAAOF,iBAEPN,EADEQ,EAAOD,iBACM,uDAEA,0DAKjB,gCACE,8CACA,uBAAMQ,SAAUA,EAAhB,UACE,uBACEF,KAAK,WACLC,MAAON,EAAOpC,SACdgD,KAAK,OACLV,SAAUA,IAEZ,uBACA,uBACEG,KAAK,WACLC,MAAON,EAAOnC,SACd+C,KAAK,WACLV,SAAUA,IAEZ,uBACA,wBAAQU,KAAK,SAAb,sBAEDpB,MCpCQqB,G,OA/BuB,SAAC,GAAc,IAC/CC,EADmC/C,EAAW,EAAXA,KAevC,OAZE+C,EADE/C,EAEA,cAAC,IAAD,CAAMgD,UAAU,cAAcC,GAAG,UAAjC,SACGjD,EAAKH,WAKR,cAAC,IAAD,CAAMmD,UAAU,cAAcC,GAAG,SAAjC,mBAMF,sBAAKD,UAAU,SAAf,UACE,cAAC,IAAD,CAAMA,UAAU,aAAaC,GAAG,IAAhC,kBAGA,cAAC,IAAD,CAAMD,UAAU,aAAaC,GAAG,WAAhC,qBAGA,cAAC,IAAD,CAAMD,UAAU,aAAaC,GAAG,UAAhC,oBAGCF,O,SCoCQG,G,OA5DyB,SAAC,GAA2B,IAa9DC,EAbqCzB,EAAwB,EAAxBA,YAAa1B,EAAW,EAAXA,KAAW,EACrB8B,qBADqB,mBAC1DzB,EAD0D,KAC1C+C,EAD0C,KAGjEC,qBAAU,YACO,uCAAG,4BAAAZ,EAAA,0DACZzC,EADY,gCAES0B,EAAY4B,kBAAkBtD,GAFvC,OAERuD,EAFQ,OAGdH,EAAkBG,GAHJ,2CAAH,qDAMfC,KACC,CAACxD,EAAM0B,IAyCV,OAfEyB,EADEnD,EAEA,gCACE,wCAAWA,EAAKH,YADlB,4BAvByB,WAC3B,IAAM4D,EAAO,GACb,GAAIpD,EAAgB,CAAC,IAAD,gBACUA,GADV,IAClB,2BAA4C,CAAC,IAAlCqD,EAAiC,QAC1CD,EAAKlD,KACH,+BACE,6BAAKmD,EAAcC,OACnB,6BAAKD,EAAcE,UAFZF,EAAcC,QAHT,8BASlB,OACE,uBAAOX,UAAU,kBAAjB,SACE,gCAAQS,MAIZ,OAAO,6DASJI,MAKH,0CACS,cAAC,IAAD,CAAMZ,GAAG,SAAT,sBAMX,gCACE,8DACCE,OCrCQW,G,OApBmC,SAAC,GAI5C,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,QACAC,EACI,EADJA,KAEA,OACE,mCACGA,EACC,qBAAKjB,UAAU,QAAf,SACE,sBAAKA,UAAU,eAAf,UACE,yEACA,oBAAIA,UAAU,YAAd,SAA2BgB,IAC3B,wBAAQE,QAASH,EAAjB,wBAGF,SCzBK,MAA0B,8CCyC1BI,G,OAzBuC,SAAC,GAMhD,IALLC,EAKI,EALJA,QACA9B,EAII,EAJJA,KACA+B,EAGI,EAHJA,SACAC,EAEI,EAFJA,SACAC,EACI,EADJA,aAEA,OACE,sBAAKvB,UAAU,iBAAf,UACGsB,EACC,qBAAKE,IAAKF,EAAUG,IAAI,KAExB,qBAAKD,IAAKE,EAAmBD,IAAI,oBAEnC,uBAAOzB,UAAU,OAAjB,SAAyBV,IACzB,uBACA,uBAAOU,UAAU,UAAjB,SAA4BoB,IAC5B,uBACA,uBAAOpB,UAAU,WAAjB,SAA6BqB,IAC7B,uBACA,wBAAQH,QAAS,SAAC9B,GAAD,OAAOmC,EAAanC,EAAGgC,IAAxC,0BCmCSO,EA3DuB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAC7B9C,mBAAkB,IADW,mBAClD+C,EADkD,KAC1CC,EAD0C,OAEvBhD,oBAAkB,GAFK,mBAElDiD,EAFkD,KAEvCC,EAFuC,OAGjBlD,mBAAiB,IAHA,mBAGlDmD,EAHkD,KAGpCC,EAHoC,KAKzD7B,qBAAU,YACO,uCAAG,4BAAAZ,EAAA,sEACYmC,EAAYO,YADxB,OACVC,EADU,OAEhBN,EAAUM,GAFM,2CAAH,qDAIfD,KACC,CAACP,EAAaE,IAEjB,IAKMP,EAAY,uCAAG,WACnBnC,EACAgC,GAFmB,eAAA3B,EAAA,6DAInBL,EAAEM,iBAJiB,SAKakC,EAAYL,aAAaH,GALtC,QAKbiB,EALa,SAOjBL,GAAa,GACbE,EAAgB,yBAAD,OAA0Bd,EAA1B,gDACeiB,MAE9BL,GAAa,GACbE,EAAgB,0DAAD,OAC6Cd,EAD7C,OAZE,2CAAH,wDAkBlB,OACE,gCACE,oDACA,8BACE,cAAC,IAAD,CAAMnB,GAAG,eAAT,4BAED4B,EAAOS,KAAI,SAACC,EAAOC,GAClB,OACE,cAAC,EAAD,CAEEpB,QAASmB,EAAMnB,QACf9B,KAAMiD,EAAMjD,KACZ+B,SAAUkB,EAAMlB,SAChBC,SAAUiB,EAAMjB,SAChBC,aAAcA,GALTiB,MASX,cAAC,EAAD,CAAczB,MAzCJ,WACZiB,GAAa,GACbE,EAAgB,KAuCclB,QAASiB,EAAchB,KAAMc,QCgBhDU,EAzEiC,SAAC,GAAqB,IA0BhEC,EA1B6Cd,EAAkB,EAAlBA,YAAkB,EACvC9C,mBAA4B,CACtDQ,KAAM,GACN+B,SAAU,GACVsB,YAAa,GACbrB,SAAU,KALuD,mBAC5DrC,EAD4D,KACpDC,EADoD,KAQ7DC,EAAW,SAACC,GACZA,EAAEC,OAAOuD,OAASxD,EAAEC,OAAOuD,MAAM,GACnC1D,EAAU,2BAAKD,GAAN,IAAc4D,MAAOzD,EAAEC,OAAOuD,MAAM,MAE7C1D,EAAU,2BAAKD,GAAN,kBAAeG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAI/CC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,6DACfL,EAAEM,iBADa,kBAGIkC,EAAYkB,YAAY7D,GAH5B,OAGP8D,EAHO,OAIbnD,MAAM,0BAAD,OAA2BmD,IAJnB,gDAMbnD,MAAM,+BAAD,cANQ,yDAAH,sDAWd,GAAIX,EAAO4D,MAAO,CAChB,IAAMG,EAAgBC,IAAIC,gBAAgBjE,EAAO4D,OACjDH,EAAa,qBAAKjB,IAAI,GAAGD,IAAKwB,SAE9BN,EAAa,6BAGf,OACE,uBAAMlD,SAAUA,EAAhB,UACE,0CAEE,uBACA,uBAAOF,KAAK,OAAOC,MAAON,EAAOK,KAAMH,SAAUA,OAEnD,uBACA,8CAEE,uBACA,uBAAOG,KAAK,WAAWC,MAAON,EAAOoC,SAAUlC,SAAUA,OAE3D,uBACA,iDAEE,uBACA,uBACEG,KAAK,cACLC,MAAON,EAAO0D,YACdxD,SAAUA,OAGd,uBACA,2CAEE,uBACA,uBAAOG,KAAK,QAAQO,KAAK,OAAOV,SAAUA,OAE5C,uBACCuD,EACD,uBACA,wBAAQS,YAAU,gBAAgBtD,KAAK,SAAvC,8BCtENnE,SAAO0H,OAAO,CACZ7G,OAAQ8G,EAAY1H,SAGf,IAAM2H,EAAb,gIACE,+FACQC,EAAaF,EAAYrH,IAAIE,UADrC,SAEyBsH,MAAMD,EAAY,CACvCE,OAAQ,QAHZ,cAEQC,EAFR,gBAM6BA,EAASC,OANtC,cAMQC,EANR,yBAQSA,GART,2CADF,uHAYE,WAA0BxC,GAA1B,oEACkB,WAAZA,EADN,yCAEW,SAFX,qCAIWjE,GAJX,2CAZF,uHAoBE,WAAyB0G,GAAzB,mFACMA,EAAShB,MADf,gCAE2BxE,KAAKyF,iBAC1BD,EAAShB,MACTQ,EAAYtH,sBAJlB,OAEUuF,EAFV,OAMIuC,EAASvC,SAAWA,EACpBuC,EAAShB,WAAQ1F,EAPrB,cASQoG,EAAaF,EAAYrH,IAAIE,UAC7B6H,EAA8B,CAClCN,OAAQ,OACRO,KAAMC,KAAKC,UAAUL,IAZzB,UAcuBL,MAAMD,EAAYQ,GAdzC,eAcQ3G,EAdR,iBAe2BA,EAAOuG,OAflC,eAeQQ,EAfR,yBAgBSF,KAAKC,UAAUC,EAAWpB,KAhBnC,iDApBF,mFAsCE,SAAuBqB,GACrB,IAAMC,EAAeC,KAAKC,MACpBC,EAAeC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,GACvDC,EAAgBT,EAASU,cAAcC,QAAQ,aAAc,KAEnE,MADiB,UAAMV,EAAN,YAAcG,EAAd,YAA8BK,GAC5BD,UAAU,EAAG,MA3CpC,qEA8CE,WAA+BI,EAAYC,GAA3C,gFACMb,EAAWY,EAAK1F,KACpB8E,EAAW/F,KAAK6G,eAAed,GAFjC,SAG6B,IAAIe,KAAG,CAChC5I,OAAQ8G,EAAY1H,SAEnByJ,OAAO,CACNC,OAAQJ,EACRK,IAAKlB,EACLmB,KAAMP,EACNQ,IAAK,gBAENC,UAZL,cAGQC,EAHR,yBAaSA,EAAaC,UAbtB,gDA9CF,gEC4CeC,G,OAvCO,WAAO,IAAD,EACF9G,wBAA2B3B,GADzB,mBACnBH,EADmB,KACb6I,EADa,KAEpBnH,EAA2B,IAAI9B,EAC/BgF,EAA2B,IAAI0B,EAE/B3E,EAAe,uCAAG,WAAO3B,GAAP,SAAAyC,EAAA,6DACtBoG,EAAQ7I,GADc,SAEhB0B,EAAYoH,gBAAgB9I,EAAKC,aAFjB,2CAAH,sDAKrB,OACE,qBAAK+C,UAAU,UAAf,SACE,cAAC,IAAD,UACE,gCACE,cAAC,EAAD,CAAQhD,KAAMA,IACd,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+I,OAAK,EAACC,KAAK,IAAIC,UAAW1H,IACjC,cAAC,IAAD,CAAOwH,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,CACErH,gBAAiBA,EACjBD,YAAaA,MAGjB,cAAC,IAAD,CAAOqH,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CAAShJ,KAAMA,EAAM0B,YAAaA,MAEpC,cAAC,IAAD,CAAOqH,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,CAAQpE,YAAaA,MAEvB,cAAC,IAAD,CAAOmE,OAAK,EAACC,KAAK,eAAlB,SACE,cAAC,EAAD,CAAapE,YAAaA,kBCtCxCsE,iBAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.eea9597b.chunk.js","sourcesContent":["export const spacesApi =\n  'https://d7i4lplnxi.execute-api.us-west-1.amazonaws.com/prod/';\n\nexport const config = {\n  REGION: 'us-west-1',\n  USER_POOL_ID: 'us-west-1_ZGKww06ux',\n  APP_CLIENT_ID: '17arebcp7ndrpv5bteptn0rapo',\n  IDENTITY_POOL_ID: 'us-west-1:722f226d-7c31-4649-b527-6cbad1997fca',\n  SPACES_PHOTOS_BUCKET: 'spaces-photos-06416ce334f1',\n  api: {\n    baseUrl: spacesApi,\n    spacesUrl: `${spacesApi}spaces`,\n  },\n};\n","import { CognitoUser } from '@aws-amplify/auth';\nimport Amplify, { Auth } from 'aws-amplify';\nimport * as AWS from 'aws-sdk';\nimport { Credentials } from 'aws-sdk';\n\nimport { User, UserAttribute } from '../model/Model';\nimport { config } from '../services/config';\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: false,\n    region: config.REGION,\n    userPoolId: config.USER_POOL_ID,\n    userPoolWebClientId: config.APP_CLIENT_ID,\n    identityPoolId: config.IDENTITY_POOL_ID,\n    authenticationFlowType: 'USER_PASSWORD_AUTH',\n  },\n});\n\nclass AuthService {\n  public async login(\n    username: string,\n    password: string\n  ): Promise<User | undefined> {\n    try {\n      const user = (await Auth.signIn(username, password)) as CognitoUser;\n      return {\n        cognitoUser: user,\n        username: user.getUsername(),\n      };\n    } catch (err) {\n      return undefined;\n    }\n  }\n\n  public async getUserAttributes(user: User): Promise<UserAttribute[]> {\n    const result: UserAttribute[] = [];\n    const attributes = await Auth.userAttributes(user.cognitoUser);\n    result.push(...attributes);\n    return result;\n  }\n\n  public refreshCredentials(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      (AWS.config.credentials as Credentials).refresh((err) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  public async getAWSTempCreds(user: CognitoUser) {\n    const cognitoIdentityPool = `cognito-idp.${config.REGION}.amazonaws.com/${config.USER_POOL_ID}`;\n    AWS.config.credentials = new AWS.CognitoIdentityCredentials(\n      {\n        IdentityPoolId: config.IDENTITY_POOL_ID,\n        Logins: {\n          [cognitoIdentityPool]: user\n            .getSignInUserSession()!\n            .getIdToken()\n            .getJwtToken(),\n        },\n      },\n      {\n        region: config.REGION,\n      }\n    );\n    await this.refreshCredentials();\n  }\n}\n\nexport default AuthService;\n","import React from 'react';\n\nconst Home: React.FC = () => {\n  return (\n    <div>\n      <h1>Welcome to the home page!</h1>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { User } from '../../model/Model';\nimport AuthService from '../../services/AuthService';\n\ninterface LoginValues {\n  username: string;\n  password: string;\n  loginAttempted: boolean;\n  loginSuccessfull: boolean;\n}\n\ninterface LoginProps {\n  callbackSetUser: (user: User) => void;\n  authService: AuthService;\n}\n\nconst Login: React.FC<LoginProps> = ({ authService, callbackSetUser }) => {\n  let history = useHistory();\n\n  const [values, setValues] = useState<LoginValues>({\n    username: '',\n    password: '',\n    loginAttempted: false,\n    loginSuccessfull: false,\n  });\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const result = await authService.login(values.username, values.password);\n\n    if (result) {\n      setValues({ ...values, loginAttempted: true, loginSuccessfull: true });\n      callbackSetUser(result);\n      history.push('/profile');\n    } else {\n      setValues({ ...values, loginAttempted: true, loginSuccessfull: false });\n      alert('Incorrect credentials.');\n    }\n  };\n\n  let loginMessage;\n\n  if (values.loginAttempted) {\n    if (values.loginSuccessfull) {\n      loginMessage = <label> Login Successfull</label>;\n    } else {\n      loginMessage = <label> Login Unsuccessfull</label>;\n    }\n  }\n\n  return (\n    <div>\n      <h2>Please Login</h2>\n      <form onSubmit={onSubmit}>\n        <input\n          name='username'\n          value={values.username}\n          type='text'\n          onChange={onChange}\n        />\n        <br />\n        <input\n          name='password'\n          value={values.password}\n          type='password'\n          onChange={onChange}\n        />\n        <br />\n        <button type='submit'>Login</button>\n      </form>\n      {loginMessage}\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { User } from '../../model/Model';\nimport './NavBar.css';\n\ninterface NavBarProps {\n  user: User | undefined;\n}\n\nconst NavBar: React.FC<NavBarProps> = ({ user }) => {\n  let loginLogout;\n  if (user) {\n    loginLogout = (\n      <Link className='loginLogout' to='/logout'>\n        {user.username}\n      </Link>\n    );\n  } else {\n    loginLogout = (\n      <Link className='loginLogout' to='/login'>\n        Login\n      </Link>\n    );\n  }\n  return (\n    <div className='navbar'>\n      <Link className='navbarItem' to='/'>\n        Home\n      </Link>\n      <Link className='navbarItem' to='/profile'>\n        Profile\n      </Link>\n      <Link className='navbarItem' to='/spaces'>\n        Spaces\n      </Link>\n      {loginLogout}\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { User, UserAttribute } from '../../model/Model';\nimport AuthService from '../../services/AuthService';\nimport './Profile.css';\n\ninterface ProfileProps {\n  user: User | undefined;\n  authService: AuthService;\n}\n\nconst Profile: React.FC<ProfileProps> = ({ authService, user }) => {\n  const [userAttributes, setUserAttributes] = useState<UserAttribute[]>();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (user) {\n        const userAtrs = await authService.getUserAttributes(user);\n        setUserAttributes(userAtrs);\n      }\n    };\n    fetchData();\n  }, [user, authService]);\n\n  let profileUi;\n\n  const renderUserAttributes = () => {\n    const rows = [];\n    if (userAttributes) {\n      for (const userAttribute of userAttributes) {\n        rows.push(\n          <tr key={userAttribute.Name}>\n            <td>{userAttribute.Name}</td>\n            <td>{userAttribute.Value}</td>\n          </tr>\n        );\n      }\n      return (\n        <table className='attributesTable'>\n          <tbody>{rows}</tbody>\n        </table>\n      );\n    } else {\n      return <label>No UserAttributes exist.</label>;\n    }\n  };\n\n  if (user) {\n    profileUi = (\n      <div>\n        <h3>Hello {user.username}</h3>\n        Here are your attributes:\n        {renderUserAttributes()}\n      </div>\n    );\n  } else {\n    profileUi = (\n      <div>\n        Please <Link to='/login'>Login</Link>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h1>Welcome to the profile page!</h1>\n      {profileUi}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\n\nimport './ConfirmModal.css';\n\ninterface ConfirmModalProps {\n  content: string;\n  show: boolean;\n  close: () => void;\n}\n\nconst ConfirmModal: React.FC<ConfirmModalProps> = ({\n  close,\n  content,\n  show,\n}) => {\n  return (\n    <>\n      {show ? (\n        <div className='modal'>\n          <div className='modalContent'>\n            <h2>You tried to reserve this space and ...</h2>\n            <h3 className='modalText'>{content}</h3>\n            <button onClick={close}>close</button>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default ConfirmModal;\n","export default __webpack_public_path__ + \"static/media/defaultSpacePhoto.5b582952.jpg\";","import React from 'react';\n\nimport defaultSpacePhoto from '../../assets/defaultSpacePhoto.jpg';\nimport './SpaceComponent.css';\n\ninterface SpaceComponentProps {\n  spaceId: string;\n  name: string;\n  location: string;\n  photoUrl?: string;\n  reserveSpace: (\n    e: React.MouseEvent<HTMLButtonElement>,\n    spaceId: string\n  ) => void;\n}\n\nconst SpaceComponent: React.FC<SpaceComponentProps> = ({\n  spaceId,\n  name,\n  location,\n  photoUrl,\n  reserveSpace,\n}) => {\n  return (\n    <div className='spaceComponent'>\n      {photoUrl ? (\n        <img src={photoUrl} alt='' />\n      ) : (\n        <img src={defaultSpacePhoto} alt='img unavailable' />\n      )}\n      <label className='name'>{name}</label>\n      <br />\n      <label className='spaceId'>{spaceId}</label>\n      <br />\n      <label className='location'>{location}</label>\n      <br />\n      <button onClick={(e) => reserveSpace(e, spaceId)}>Reserve</button>\n    </div>\n  );\n};\n\nexport default SpaceComponent;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ConfirmModal from '../../components/ConfirmModal/ConfirmModal';\nimport SpaceComponent from '../../components/SpaceComponent/SpaceComponent';\nimport { Space } from '../../model/Model';\nimport { DataService } from '../../services/DataService';\n\ninterface SpacesProps {\n  dataService: DataService;\n}\n\nconst Spaces: React.FC<SpacesProps> = ({ dataService }) => {\n  const [spaces, setSpaces] = useState<Space[]>([]);\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const [modalContent, setModalContent] = useState<string>('');\n\n  useEffect(() => {\n    const getSpaces = async () => {\n      const fetchedSpaces = await dataService.getSpaces();\n      setSpaces(fetchedSpaces);\n    };\n    getSpaces();\n  }, [dataService, setSpaces]);\n\n  const close = () => {\n    setShowModal(false);\n    setModalContent('');\n  };\n\n  const reserveSpace = async (\n    e: React.MouseEvent<HTMLButtonElement>,\n    spaceId: string\n  ) => {\n    e.preventDefault();\n    const reservationResult = await dataService.reserveSpace(spaceId);\n    if (reservationResult) {\n      setShowModal(true);\n      setModalContent(`You reserved spaceId: ${spaceId}.\n      Your reservation number is: ${reservationResult}`);\n    } else {\n      setShowModal(true);\n      setModalContent(\n        `Reservations are currently full for the space with id: ${spaceId}.`\n      );\n    }\n  };\n\n  return (\n    <div>\n      <h2>Welcome to Spaces!</h2>\n      <div>\n        <Link to='/createSpace'>Create Space</Link>\n      </div>\n      {spaces.map((space, key) => {\n        return (\n          <SpaceComponent\n            key={key}\n            spaceId={space.spaceId}\n            name={space.name}\n            location={space.location}\n            photoUrl={space.photoUrl}\n            reserveSpace={reserveSpace}\n          />\n        );\n      })}\n      <ConfirmModal close={close} content={modalContent} show={showModal} />\n    </div>\n  );\n};\n\nexport default Spaces;\n","import React, { useState } from 'react';\n\nimport { CreatedSpaceModel } from '../../model/Model';\nimport { DataService } from '../../services/DataService';\n\ninterface CreateSpaceProps {\n  dataService: DataService;\n}\n\nconst CreateSpace: React.FC<CreateSpaceProps> = ({ dataService }) => {\n  const [values, setValues] = useState<CreatedSpaceModel>({\n    name: '',\n    location: '',\n    description: '',\n    photoUrl: '',\n  });\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      setValues({ ...values, photo: e.target.files[0] });\n    } else {\n      setValues({ ...values, [e.target.name]: e.target.value });\n    }\n  };\n\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      const id = await dataService.createSpace(values);\n      alert(`Created space with id: ${id}`);\n    } catch (err) {\n      alert(`Error while creating space: ${err}`);\n    }\n  };\n\n  let photoSpace;\n  if (values.photo) {\n    const localPhotoUrl = URL.createObjectURL(values.photo);\n    photoSpace = <img alt='' src={localPhotoUrl} />;\n  } else {\n    photoSpace = <></>;\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <label>\n        Name:\n        <br />\n        <input name='name' value={values.name} onChange={onChange} />\n      </label>\n      <br />\n      <label>\n        Location:\n        <br />\n        <input name='location' value={values.location} onChange={onChange} />\n      </label>\n      <br />\n      <label>\n        Description:\n        <br />\n        <input\n          name='description'\n          value={values.description}\n          onChange={onChange}\n        />\n      </label>\n      <br />\n      <label>\n        Photo:\n        <br />\n        <input name='photo' type='file' onChange={onChange} />\n      </label>\n      <br />\n      {photoSpace}\n      <br />\n      <button data-test='submit-button' type='submit'>\n        Create Space\n      </button>\n    </form>\n  );\n};\n\nexport default CreateSpace;\n","import { CreatedSpaceModel, Space } from '../model/Model';\nimport { S3, config } from 'aws-sdk';\n\nimport { config as localConfig } from './config';\n\nconfig.update({\n  region: localConfig.REGION,\n});\n\nexport class DataService {\n  public async getSpaces(): Promise<Space[]> {\n    const requestUrl = localConfig.api.spacesUrl;\n    const response = await fetch(requestUrl, {\n      method: 'GET',\n    });\n\n    const responseJSON = await response.json();\n\n    return responseJSON;\n  }\n\n  public async reserveSpace(spaceId: string): Promise<string | undefined> {\n    if (spaceId === '123456') {\n      return '69420';\n    } else {\n      return undefined;\n    }\n  }\n\n  public async createSpace(newSpace: CreatedSpaceModel) {\n    if (newSpace.photo) {\n      const photoUrl = await this.uploadPublicFile(\n        newSpace.photo,\n        localConfig.SPACES_PHOTOS_BUCKET\n      );\n      newSpace.photoUrl = photoUrl;\n      newSpace.photo = undefined;\n    }\n    const requestUrl = localConfig.api.spacesUrl;\n    const requestOptions: RequestInit = {\n      method: 'POST',\n      body: JSON.stringify(newSpace),\n    };\n    const result = await fetch(requestUrl, requestOptions);\n    const resultJSON = await result.json();\n    return JSON.stringify(resultJSON.id);\n  }\n  private formatFileName(fileName: string): string {\n    const date: number = Date.now();\n    const randomString = Math.random().toString(36).substring(2, 7);\n    const cleanFileName = fileName.toLowerCase().replace(/[^a-z0-9]/g, '-');\n    const newFileName = `${date}-${randomString}-${cleanFileName}`;\n    return newFileName.substring(0, 60);\n  }\n\n  private async uploadPublicFile(file: File, bucket: string) {\n    let fileName = file.name;\n    fileName = this.formatFileName(fileName);\n    const uploadResult = await new S3({\n      region: localConfig.REGION,\n    })\n      .upload({\n        Bucket: bucket,\n        Key: fileName,\n        Body: file,\n        ACL: 'public-read',\n      })\n      .promise();\n    return uploadResult.Location;\n  }\n}\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { User } from '../../model/Model';\nimport AuthService from '../../services/AuthService';\nimport Home from '../../pages/Home/Home';\nimport Login from '../../pages/Login/Login';\nimport NavBar from '../NavBar/NavBar';\nimport Profile from '../../pages/Profile/Profile';\nimport Spaces from '../../pages/Spaces/Spaces';\nimport CreateSpace from '../CreateSpace/CreateSpace';\nimport { DataService } from '../../services/DataService';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [user, setUser] = useState<User | undefined>(undefined);\n  const authService: AuthService = new AuthService();\n  const dataService: DataService = new DataService();\n\n  const callbackSetUser = async (user: User) => {\n    setUser(user);\n    await authService.getAWSTempCreds(user.cognitoUser);\n  };\n\n  return (\n    <div className='wrapper'>\n      <Router>\n        <div>\n          <NavBar user={user} />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/login'>\n              <Login\n                callbackSetUser={callbackSetUser}\n                authService={authService}\n              />\n            </Route>\n            <Route exact path='/profile'>\n              <Profile user={user} authService={authService} />\n            </Route>\n            <Route exact path='/spaces'>\n              <Spaces dataService={dataService} />\n            </Route>\n            <Route exact path='/createSpace'>\n              <CreateSpace dataService={dataService} />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport './index.css';\nimport App from './components/App/App';\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}